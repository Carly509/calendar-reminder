{"ast":null,"code":"var _jsxFileName = \"/Users/tesnorcarly/Desktop/calendar-reminder/src/components/Counter.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Counter(_ref) {\n  _s();\n\n  let {\n    limit\n  } = _ref;\n  const [count, setCount] = React.useState(0);\n  const isLimitReached = limit ? count === limit : false;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"counter\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Counter: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        if (isLimitReached) return;\n        setCount(count + 1);\n      },\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setCount(count - 1);\n      },\n      children: \"Decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), isLimitReached && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"You reached the limit!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Counter, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = Counter;\nCounter.propTypes = {\n  limit: PropTypes.number\n};\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","PropTypes","Button","Counter","limit","count","setCount","useState","isLimitReached","propTypes","number"],"sources":["/Users/tesnorcarly/Desktop/calendar-reminder/src/components/Counter.jsx"],"sourcesContent":["import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport Button from \"./Button\";\n\nfunction Counter({ limit }) {\n  const [count, setCount] = React.useState(0);\n  const isLimitReached = limit ? count === limit : false;\n\n  return (\n    <div className=\"counter\">\n      <h3>Counter: {count}</h3>\n      <Button\n        onClick={() => {\n          if (isLimitReached) return;\n          setCount(count + 1);\n        }}\n      >\n        Increment\n      </Button>\n      <Button\n        onClick={() => {\n          setCount(count - 1);\n        }}\n      >\n        Decrement\n      </Button>\n      {isLimitReached && <span>You reached the limit!</span>}\n    </div>\n  );\n}\n\nCounter.propTypes = {\n  limit: PropTypes.number,\n};\n\nexport default Counter;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,OAAT,OAA4B;EAAA;;EAAA,IAAX;IAAEC;EAAF,CAAW;EAC1B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,KAAK,CAACO,QAAN,CAAe,CAAf,CAA1B;EACA,MAAMC,cAAc,GAAGJ,KAAK,GAAGC,KAAK,KAAKD,KAAb,GAAqB,KAAjD;EAEA,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA,wBACE;MAAA,wBAAcC,KAAd;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MACE,OAAO,EAAE,MAAM;QACb,IAAIG,cAAJ,EAAoB;QACpBF,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;MACD,CAJH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAUE,QAAC,MAAD;MACE,OAAO,EAAE,MAAM;QACbC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;MACD,CAHH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAVF,EAiBGG,cAAc,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAjBrB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD;;GAzBQL,O;;KAAAA,O;AA2BTA,OAAO,CAACM,SAAR,GAAoB;EAClBL,KAAK,EAAEH,SAAS,CAACS;AADC,CAApB;AAIA,eAAeP,OAAf"},"metadata":{},"sourceType":"module"}