{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const reminderSlice = createSlice({\n  name: \"reminder\",\n  initialState: {\n    reminders: [{\n      id: 1,\n      date: \"2021-08-01\",\n      time: \"10:00\",\n      city: \"New York\",\n      description: \"Meeting with John\"\n    }]\n  },\n  reducers: {\n    addReminder: (state, action) => {\n      let newReminder = {\n        id: Math.random(),\n        date: action.payload.date,\n        time: action.payload.time,\n        city: action.payload.city,\n        description: action.payload.description //weather: action.payload.weather,\n\n      };\n      state.reminders.push(newReminder);\n    },\n    editReminder: (state, action) => {\n      state.reminders = state.reminders.map(reminder => reminder.id === action.payload.id ? action.payload : reminder);\n    },\n    deleteReminder: (state, action) => {\n      state.reminders = state.reminders.filter(reminder => reminder.id !== action.payload);\n    }\n  }\n});\nexport const {\n  editReminder,\n  addReminder,\n  deleteReminder\n} = reminderSlice.actions;\nexport default reminderSlice.reducer;","map":{"version":3,"names":["createSlice","reminderSlice","name","initialState","reminders","id","date","time","city","description","reducers","addReminder","state","action","newReminder","Math","random","payload","push","editReminder","map","reminder","deleteReminder","filter","actions","reducer"],"sources":["/Users/tesnorcarly/Desktop/calendar-reminder/src/features/reminder/ReminderSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const reminderSlice = createSlice({\n  name: \"reminder\",\n  initialState: {\n    reminders: [\n      {\n        id: 1,\n        date: \"2021-08-01\",\n        time: \"10:00\",\n        city: \"New York\",\n        description: \"Meeting with John\",\n      },\n    ],\n  },\n  reducers: {\n    addReminder: (state, action) => {\n      let newReminder = {\n        id: Math.random(),\n        date: action.payload.date,\n        time: action.payload.time,\n        city: action.payload.city,\n        description: action.payload.description,\n        //weather: action.payload.weather,\n      };\n      state.reminders.push(newReminder);\n    },\n    editReminder: (state, action) => {\n      state.reminders = state.reminders.map((reminder) =>\n        reminder.id === action.payload.id ? action.payload : reminder\n      );\n    },\n    deleteReminder: (state, action) => {\n      state.reminders = state.reminders.filter(\n        (reminder) => reminder.id !== action.payload\n      );\n    },\n  },\n});\n\nexport const { editReminder, addReminder, deleteReminder } =\n  reminderSlice.actions;\n\nexport default reminderSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,aAAa,GAAGD,WAAW,CAAC;EACvCE,IAAI,EAAE,UADiC;EAEvCC,YAAY,EAAE;IACZC,SAAS,EAAE,CACT;MACEC,EAAE,EAAE,CADN;MAEEC,IAAI,EAAE,YAFR;MAGEC,IAAI,EAAE,OAHR;MAIEC,IAAI,EAAE,UAJR;MAKEC,WAAW,EAAE;IALf,CADS;EADC,CAFyB;EAavCC,QAAQ,EAAE;IACRC,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC9B,IAAIC,WAAW,GAAG;QAChBT,EAAE,EAAEU,IAAI,CAACC,MAAL,EADY;QAEhBV,IAAI,EAAEO,MAAM,CAACI,OAAP,CAAeX,IAFL;QAGhBC,IAAI,EAAEM,MAAM,CAACI,OAAP,CAAeV,IAHL;QAIhBC,IAAI,EAAEK,MAAM,CAACI,OAAP,CAAeT,IAJL;QAKhBC,WAAW,EAAEI,MAAM,CAACI,OAAP,CAAeR,WALZ,CAMhB;;MANgB,CAAlB;MAQAG,KAAK,CAACR,SAAN,CAAgBc,IAAhB,CAAqBJ,WAArB;IACD,CAXO;IAYRK,YAAY,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;MAC/BD,KAAK,CAACR,SAAN,GAAkBQ,KAAK,CAACR,SAAN,CAAgBgB,GAAhB,CAAqBC,QAAD,IACpCA,QAAQ,CAAChB,EAAT,KAAgBQ,MAAM,CAACI,OAAP,CAAeZ,EAA/B,GAAoCQ,MAAM,CAACI,OAA3C,GAAqDI,QADrC,CAAlB;IAGD,CAhBO;IAiBRC,cAAc,EAAE,CAACV,KAAD,EAAQC,MAAR,KAAmB;MACjCD,KAAK,CAACR,SAAN,GAAkBQ,KAAK,CAACR,SAAN,CAAgBmB,MAAhB,CACfF,QAAD,IAAcA,QAAQ,CAAChB,EAAT,KAAgBQ,MAAM,CAACI,OADrB,CAAlB;IAGD;EArBO;AAb6B,CAAD,CAAjC;AAsCP,OAAO,MAAM;EAAEE,YAAF;EAAgBR,WAAhB;EAA6BW;AAA7B,IACXrB,aAAa,CAACuB,OADT;AAGP,eAAevB,aAAa,CAACwB,OAA7B"},"metadata":{},"sourceType":"module"}