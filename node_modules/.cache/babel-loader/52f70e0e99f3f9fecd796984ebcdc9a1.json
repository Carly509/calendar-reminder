{"ast":null,"code":"var _jsxFileName = \"/Users/tesnorcarly/Desktop/calendar-reminder/src/components/weather/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getWeather } from \"../../features/weather/WeatherSlice\";\nimport { color } from \"../../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Weather = _ref => {\n  _s();\n\n  let {\n    city,\n    currentDate,\n    id\n  } = _ref;\n  const weather = useSelector(state => state.weather.weather);\n  const dispatch = useDispatch();\n  const uniqueWeather = weather.filter((weather, index, self) => index === self.findIndex(t => t.id === weather.id));\n  const weatherUniq = uniqueWeather.filter(e => e.id === id);\n  useEffect(() => {\n    const fetchApi = async () => {\n      const values = {\n        city: city,\n        date: currentDate,\n        id: id\n      };\n      dispatch(getWeather(values));\n    };\n\n    fetchApi();\n  }, [dispatch, city, currentDate, id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: weatherUniq.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.weatherContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.temperatureDiv,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.tempText,\n          children: [day.temp, \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.tempCity,\n          children: city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.currentWeather,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.currentWeatherDiv,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: styles.currentWeatherText,\n            children: day.conditions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: styles.currentWeatherDesc,\n            children: [\" \", day.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.minMaxTemp,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [day.tempmin, \"\\xB0C / \", day.tempmax, \"\\xB0C\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, day.datetime, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Weather, \"n4n38zORxSWpB0ss4MEQaiZDCw4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Weather;\nexport default Weather;\nexport const styles = {\n  weatherContainer: {\n    width: \"400px\",\n    height: \"200px\",\n    fontFamily: \"open sans\"\n  },\n  temperatureDiv: {\n    width: \"120px\",\n    height: \"100px\",\n    background: \"rgb(41, 41, 41)\",\n    marginLeft: \"20px\"\n  },\n  currentWeather: {\n    with: \"50px\",\n    height: \"70px\",\n    background: color.tertiary,\n    marginLeft: \"10rem\",\n    marginTop: \"-7.2rem\"\n  },\n  tempText: {\n    color: color.tertiary,\n    fontSize: \"30px\",\n    textAlign: \"center\",\n    display: \"block\",\n    fontweight: 300,\n    padding: \"10px 0 0\"\n  },\n  tempCity: {\n    color: color.tertiary,\n    fontSize: \"18px\",\n    textAlign: \"center\",\n    display: \"block\"\n  },\n  minMaxTemp: {\n    width: \"100%\",\n    height: \"30px\",\n    background: \"rgb(42, 178, 234)\",\n    color: color.tertiary,\n    textAlign: \"center\",\n    fontweight: 700,\n    marginTop: \"7px\",\n    padding: \"5px 0\"\n  },\n  currentWeatherDiv: {\n    display: \"block\",\n    textAlign: \"center\",\n    padding: \"10px 0 0\"\n  },\n  currentWeatherText: {\n    fontweight: 500,\n    fontSize: \"20px\"\n  },\n  currentWeatherDesc: {\n    fontweight: 300,\n    fontSize: \"8px\"\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","getWeather","color","Weather","city","currentDate","id","weather","state","dispatch","uniqueWeather","filter","index","self","findIndex","t","weatherUniq","e","fetchApi","values","date","map","day","styles","weatherContainer","temperatureDiv","tempText","temp","tempCity","currentWeather","currentWeatherDiv","currentWeatherText","conditions","currentWeatherDesc","description","minMaxTemp","tempmin","tempmax","datetime","width","height","fontFamily","background","marginLeft","with","tertiary","marginTop","fontSize","textAlign","display","fontweight","padding"],"sources":["/Users/tesnorcarly/Desktop/calendar-reminder/src/components/weather/Weather.js"],"sourcesContent":["import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { getWeather } from \"../../features/weather/WeatherSlice\";\nimport { color } from \"../../utils/constants\";\n\nconst Weather = ({ city, currentDate, id }) => {\n  const weather = useSelector((state) => state.weather.weather);\n  const dispatch = useDispatch();\n\n  const uniqueWeather = weather.filter(\n    (weather, index, self) =>\n      index === self.findIndex((t) => t.id === weather.id)\n  );\n\n  const weatherUniq = uniqueWeather.filter((e) => e.id === id);\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      const values = {\n        city: city,\n        date: currentDate,\n        id: id,\n      };\n      dispatch(getWeather(values));\n    };\n    fetchApi();\n  }, [dispatch, city, currentDate, id]);\n\n  return (\n    <div>\n      {weatherUniq.map((day) => (\n        <div key={day.datetime} style={styles.weatherContainer}>\n          <div style={styles.temperatureDiv}>\n            <p style={styles.tempText}>{day.temp}°</p>\n            <p style={styles.tempCity}>{city}</p>\n          </div>\n          <div style={styles.currentWeather}>\n            <div style={styles.currentWeatherDiv}>\n              <p style={styles.currentWeatherText}>{day.conditions}</p>\n              <p style={styles.currentWeatherDesc}> {day.description}</p>\n            </div>\n            <div style={styles.minMaxTemp}>\n              <span>\n                {day.tempmin}°C / {day.tempmax}°C{\" \"}\n              </span>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Weather;\n\nexport const styles = {\n  weatherContainer: {\n    width: \"400px\",\n    height: \"200px\",\n    fontFamily: \"open sans\",\n  },\n  temperatureDiv: {\n    width: \"120px\",\n    height: \"100px\",\n    background: \"rgb(41, 41, 41)\",\n    marginLeft: \"20px\",\n  },\n  currentWeather: {\n    with: \"50px\",\n    height: \"70px\",\n    background: color.tertiary,\n    marginLeft: \"10rem\",\n    marginTop: \"-7.2rem\",\n  },\n  tempText: {\n    color: color.tertiary,\n    fontSize: \"30px\",\n    textAlign: \"center\",\n    display: \"block\",\n    fontweight: 300,\n    padding: \"10px 0 0\",\n  },\n  tempCity: {\n    color: color.tertiary,\n    fontSize: \"18px\",\n    textAlign: \"center\",\n    display: \"block\",\n  },\n  minMaxTemp: {\n    width: \"100%\",\n    height: \"30px\",\n    background: \"rgb(42, 178, 234)\",\n    color: color.tertiary,\n    textAlign: \"center\",\n    fontweight: 700,\n    marginTop: \"7px\",\n    padding: \"5px 0\",\n  },\n  currentWeatherDiv: {\n    display: \"block\",\n    textAlign: \"center\",\n    padding: \"10px 0 0\",\n  },\n  currentWeatherText: {\n    fontweight: 500,\n    fontSize: \"20px\",\n  },\n  currentWeatherDesc: {\n    fontweight: 300,\n    fontSize: \"8px\",\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}