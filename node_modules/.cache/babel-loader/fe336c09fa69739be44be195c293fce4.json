{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport ApiUrl from \"../../axios/ApiUrl\";\nconst api_key = process.env.REACT_APP_API_KEY;\nexport const getWeather = createAsyncThunk(\"weather/getWeather\", async values => {\n  const response = await ApiUrl.get(`${values.city}/${values.date}/${values.date}?unitGroup=metric&key=${api_key}&contentType=json`);\n  const final = response.data.days[0];\n  final[\"id\"] = values.id;\n  return final;\n});\nconst initialState = {\n  weather: [],\n  status: null\n};\nexport const weatherSlice = createSlice({\n  name: \"weather\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getWeather.pending]: state => {\n      state.status = \"loading\";\n    },\n    [getWeather.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.weather.push(action.payload);\n    },\n    [getWeather.rejected]: state => {\n      state.status = \"failed\";\n    }\n  }\n});\nexport default weatherSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","ApiUrl","api_key","process","env","REACT_APP_API_KEY","getWeather","values","response","get","city","date","final","data","days","id","initialState","weather","status","weatherSlice","name","reducers","extraReducers","pending","state","fulfilled","action","push","payload","rejected","reducer"],"sources":["/Users/tesnorcarly/Desktop/calendar-reminder/src/features/weather/WeatherSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nimport ApiUrl from \"../../axios/ApiUrl\";\n\nconst api_key = process.env.REACT_APP_API_KEY;\n\nexport const getWeather = createAsyncThunk(\n  \"weather/getWeather\",\n  async (values) => {\n    const response = await ApiUrl.get(\n      `${values.city}/${values.date}/${values.date}?unitGroup=metric&key=${api_key}&contentType=json`\n    );\n    const final = response.data.days[0];\n    final[\"id\"] = values.id;\n    return final;\n  }\n);\n\nconst initialState = {\n  weather: [],\n  status: null,\n};\n\nexport const weatherSlice = createSlice({\n  name: \"weather\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getWeather.pending]: (state) => {\n      state.status = \"loading\";\n    },\n    [getWeather.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.weather.push(action.payload);\n    },\n    [getWeather.rejected]: (state) => {\n      state.status = \"failed\";\n    },\n  },\n});\n\nexport default weatherSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;AAEA,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CACxC,oBADwC,EAExC,MAAOO,MAAP,IAAkB;EAChB,MAAMC,QAAQ,GAAG,MAAMP,MAAM,CAACQ,GAAP,CACpB,GAAEF,MAAM,CAACG,IAAK,IAAGH,MAAM,CAACI,IAAK,IAAGJ,MAAM,CAACI,IAAK,yBAAwBT,OAAQ,mBADxD,CAAvB;EAGA,MAAMU,KAAK,GAAGJ,QAAQ,CAACK,IAAT,CAAcC,IAAd,CAAmB,CAAnB,CAAd;EACAF,KAAK,CAAC,IAAD,CAAL,GAAcL,MAAM,CAACQ,EAArB;EACA,OAAOH,KAAP;AACD,CATuC,CAAnC;AAYP,MAAMI,YAAY,GAAG;EACnBC,OAAO,EAAE,EADU;EAEnBC,MAAM,EAAE;AAFW,CAArB;AAKA,OAAO,MAAMC,YAAY,GAAGpB,WAAW,CAAC;EACtCqB,IAAI,EAAE,SADgC;EAEtCJ,YAFsC;EAGtCK,QAAQ,EAAE,EAH4B;EAItCC,aAAa,EAAE;IACb,CAAChB,UAAU,CAACiB,OAAZ,GAAuBC,KAAD,IAAW;MAC/BA,KAAK,CAACN,MAAN,GAAe,SAAf;IACD,CAHY;IAIb,CAACZ,UAAU,CAACmB,SAAZ,GAAwB,CAACD,KAAD,EAAQE,MAAR,KAAmB;MACzCF,KAAK,CAACN,MAAN,GAAe,SAAf;MACAM,KAAK,CAACP,OAAN,CAAcU,IAAd,CAAmBD,MAAM,CAACE,OAA1B;IACD,CAPY;IAQb,CAACtB,UAAU,CAACuB,QAAZ,GAAwBL,KAAD,IAAW;MAChCA,KAAK,CAACN,MAAN,GAAe,QAAf;IACD;EAVY;AAJuB,CAAD,CAAhC;AAkBP,eAAeC,YAAY,CAACW,OAA5B"},"metadata":{},"sourceType":"module"}